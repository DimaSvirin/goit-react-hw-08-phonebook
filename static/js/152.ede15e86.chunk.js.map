{"version":3,"file":"static/js/152.ede15e86.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["const selectFilter = state => state.contacts.filter;\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.contacts.error;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\nimport MUI from 'components/MUI';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n\n    if (contacts.find(el => el.name === name)) {\n      Notiflix.Notify.warning('Name \"' + name + '\" is already in contacts');\n      e.target.reset();\n      return;\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    e.target.reset();\n  };\n\n  return (\n    <MUI.Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n      <MUI.Grid container spacing={2}>\n        <MUI.Grid item xs={12}>\n          <MUI.TextField\n            autoComplete=\"name\"\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            fullWidth\n          />\n        </MUI.Grid>\n        <MUI.Grid item xs={12}>\n          <MUI.TextField\n            autoComplete=\"phone\"\n            id=\"tel\"\n            label=\"Number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            fullWidth\n          />\n        </MUI.Grid>\n      </MUI.Grid>\n      <MUI.Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        sx={{ mt: 3, mb: 2 }}\n      >\n        Add contact\n      </MUI.Button>\n    </MUI.Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactStyle = styled.ul`\n    display: flex;\n    justify-content: center;\n    gap: 12px;\n   \n    flex-wrap: wrap;\n`","import styled from \"styled-components\";\n\nexport const Contact = styled.li`\n    text-align: center;\n    border: 1px solid #1976d2;\n    padding: 14px;\n    border-radius: 5px;\n`\n\n// export const DeleteBtn = styled.button`\n//     cursor: pointer;\n//     padding: .5rem 2.5rem;\n//     font-size: 16px;\n//     font-weight: 600;\n//     text-transform: uppercase;\n//     color: #fff;\n//     background-color: grey;\n//     border-radius: 10px;\n//     border: none;\n//     border-radius: remy(35px);\n//     transition: background-color 250ms linear;\n//         :focus,\n//         :hover {background-color: red;}\n// `\n\nexport const Name = styled.p`\n    font-size: 18px;\n    font-weight: 500;\n`","import PropTypes from 'prop-types';\nimport { Contact, Name } from \"./ContactListItem.styled\";\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport MUI from 'components/MUI';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const deleteRec = () => {\n    dispatch(deleteContact(id));\n  } \n  return (\n    <Contact>\n      <Name>\n        {name}: {number}\n      </Name>\n      \n      <MUI.Button\n        startIcon={<DeleteIcon />}\n        variant=\"outlined\"\n        sx={{ mt: 3, mb: 2 }}\n        onClick={deleteRec}\n      >\n        Delete\n      </MUI.Button>\n    </Contact>\n    \n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import { ContactStyle } from './ContactList.styled';\nimport { ContactItem } from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts  } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactStyle>\n      {visibleContacts.map(({ name, id, number }) => (\n        <ContactItem\n          id={id}\n          key={id}\n          number={number}\n          name={name}\n        />\n      ))}\n    </ContactStyle>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SearchWrap = styled.div`\n    margin: 0 auto;\n    max-width: 400px;\n    display: flex;\n    gap: 10px;\n`\n\nexport const Input = styled.input`\n    background-color: transparent;\n    border-top: 0;\n    border-right: 0;\n    border-left: 0;\n    border-radius: 0;\n    :focus {outline:none;\n        border-color: #4f4dca;\n        }\n`\n\nexport const SearchLabel = styled.label`\n    font-size: 20px;\n    font-weight: 500;\n`\n","import { SearchWrap, SearchLabel } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport MUI from 'components/MUI';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handlerChangeFilter = e => {\n    dispatch(setFilter(e.target.value.toLowerCase().trim()))\n  }\n  return (\n    <SearchWrap>\n      <SearchLabel htmlFor=\"filter\">Find contacts by name:</SearchLabel>\n      <MUI.TextField\n          fullWidth\n          id=\"filter\"\n          type=\"text\"\n          name=\"filter\"\n          label='Find contacts'\n          onChange={handlerChangeFilter}\n        />\n    </SearchWrap>\n  );\n}\n\n\n","import MUI from 'components/MUI';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <MUI.Box sx={{ flexGrow: 1 }}>\n      <MUI.Grid container spacing={2} columns={16}>\n        <MUI.Grid item xs={5}>\n            <ContactForm />\n            <Filter />\n        </MUI.Grid>\n          <MUI.Grid item xs={8}>\n            <ContactList />\n            {isLoading && <p>Loading...</p>}\n        </MUI.Grid>\n      </MUI.Grid>\n    </MUI.Box>\n    </div>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","filter","selectFilter","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","MUI","component","noValidate","onSubmit","e","preventDefault","target","elements","value","number","find","el","Notiflix","reset","newContact","id","nanoid","addContact","sx","mt","container","spacing","item","xs","autoComplete","label","type","pattern","title","required","fullWidth","variant","mb","ContactStyle","styled","Contact","Name","ContactItem","startIcon","Delete","onClick","deleteContact","ContactList","visibleContacts","map","SearchWrap","SearchLabel","Filter","htmlFor","onChange","setFilter","trim","Contacts","useEffect","fetchContacts","flexGrow","columns"],"sourceRoot":""}